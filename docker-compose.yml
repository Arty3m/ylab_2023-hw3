version: '3.8'

services:
  menu_app:
    container_name: menu_app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - app.env
    command: >
      sh -c "
      echo 'Making migrations...' &&
      alembic upgrade head &&
      echo 'Starting project...' &&
      uvicorn src.main:app --host 0.0.0.0 --reload
      "
    networks:
      - app_network
    ports:
      - "8000:8000"
    depends_on:
      postgres_db:
        condition: service_healthy
      redis_db:
        condition: service_healthy

  postgres_db:
    container_name: postgres_db
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_HOST=postgres_db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ylab_hw
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 20s
      retries: 100

  redis_db:
    container_name: redis_db
    image: redis:latest
    expose:
      - 6379
    ports:
      - "9000:6379"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 20s
      retries: 100

networks:
  app_network:
    name: app_network

volumes:
  postgres_data:
